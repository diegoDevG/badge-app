{"version":3,"sources":["images/platziconf-logo.svg","images/badge-header.svg","images/logo.svg","images/astronauts.svg","api.js","components/BadgeList.jsx","components/Loader.jsx","containers/Badges.jsx","components/badge.jsx","components/BadgeForm.jsx","containers/BadgeNew.jsx","components/Navbar.jsx","containers/Layout.jsx","containers/NotFound.jsx","components/Home.jsx","containers/EditBadge.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_URL","simulateNetworkLatency","ms","min","arguments","length","undefined","max","Math","floor","random","randomNumber","Promise","resolve","setTimeout","callApi","_callee","endpoint","options","url","response","data","_args","regenerator_default","a","wrap","_context","prev","next","headers","Content-Type","Accept","fetch","sent","json","abrupt","stop","api","badges","list","create","badge","method","body","JSON","stringify","read","badgeId","concat","update","updates","remove","BadgesListItem","props","_props$badge","name","lastName","twitter","job","react_default","createElement","className","src","avatarId","alt","BadgesList","payload","_React$useState","React","useState","_React$useState2","Object","slicedToArray","query","setQuery","filteredBadges","filter","toLowerCase","includes","htmlFor","type","value","onChange","e","target","react_router_dom","to","map","index","key","_id","BadgeList_BadgesListItem","Loader","Badge","state","loading","error","fetchData","_this","setState","t0","this","components_Loader","message","logo","BadgeList","Component","avatar","BadgeForm","onSubmit","placeholder","email","BadgeNew","form","handleInputChange","objectSpread","defineProperty","handleSubmit","preventDefault","history","push","randomAvatar","_this$state$form","header","components_badge","components_BadgeForm","Navbar","Layout","Fragment","components_Navbar","children","NotFound","Home","logo2","EditBadge","match","params","console","log","_callee2","_context2","App","containers_Layout","react_router","exact","path","component","Badges","Boolean","window","location","hostname","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24d15093.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/platziconf-logo.f246f5f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/badge-header.973f5842.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0026b862.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronauts.71addf45.svg\";","const BASE_URL = 'https://platzi-badges.herokuapp.com';\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst randomNumber = (min = 0, max = 1) =>\n    Math.floor(Math.random() * (max - min + 1)) + min;\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\n    delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n    await simulateNetworkLatency();\n\n    options.headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    };\n\n    const url = BASE_URL + endpoint;\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    return data;\n}\n\nconst api = {\n    badges: {\n        list() {\n            return callApi('/api/v1');\n        },\n        create(badge) {\n            return callApi(`/api/v1`, {\n                method: 'POST',\n                body: JSON.stringify(badge),\n            });\n        },\n        read(badgeId) {\n            return callApi(`/api/v1/${badgeId}`);\n        },\n        update(badgeId, updates) {\n            return callApi(`/api/v1/${badgeId}`, {\n                method: 'PUT',\n                body: JSON.stringify(updates),\n            });\n        },\n        // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n        remove(badgeId) {\n            return callApi(`/api/v1/${badgeId}`, {\n                method: 'DELETE',\n            });\n        },\n    },\n};\n\nexport default api;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// import './styles/BadgesList.css';\n\n\nconst BadgesListItem = (props) => {\n\n    const { name, lastName, twitter, job } = props.badge\n\n    return (\n        <div className=\"BadgesListItem\">\n            <img\n                className=\"BadgesListItem__avatar\"\n                src={`https://i.pravatar.cc/100?img=${props.avatarId}`}\n                alt={`${name} ${lastName}`}\n            />\n\n            <div>\n                <strong>\n                    {name} {lastName}\n                </strong>\n                <br />@{twitter}\n                <br />\n                {job}\n            </div>\n        </div>\n    );\n\n}\n\n\n\n\n\nconst BadgesList = (props) => {\n    const badges = props.badges.payload\n\n    const [query, setQuery] = React.useState(\" \")\n\n    const filteredBadges = badges.filter(badge => {\n        return `${badge.name} ${badge.lastName}`.toLowerCase().includes(query)\n    })\n\n    if (filteredBadges.length === 0) {\n        return (\n            <div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Filter Badges </label>\n                    <input type=\"text\" className=\"form-control\"\n                        value={query}\n                        onChange={(e) => {\n                            setQuery(e.target.value)\n                        }}\n                    />\n                </div>\n                <h3>No badges were found</h3>\n                <Link className=\"btn btn-primary\" to=\"/new-badge\">\n                    Create new badge\n              </Link>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"BadgesList\">\n            <div className=\"form-group\">\n                <label >Filter Badges </label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={query}\n                    onChange={(e) => {\n                        setQuery(e.target.value)\n                    }}\n                />\n            </div>\n            <ul className=\"list-unstyled\">\n                {filteredBadges.map((badge, index) => {\n                    return (\n                        <li key={index}>\n                            <Link className=\"text-reset text-decoration-none\" to={`/edit-badge/${badge._id}`} >\n                                <BadgesListItem badge={badge} avatarId={index} />\n                            </Link>\n\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\n\n\n\nexport default BadgesList;","import React from 'react';\nimport '../styles/Loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"PageLoading\">\n            <div className=\"loader\">Loading...</div>\n        </div>\n\n    )\n}\n\nexport default Loader","import React from 'react';\nimport '../styles/Badges.css';\nimport logo from '../images/badge-header.svg';\nimport { Link } from 'react-router-dom';\n\nimport api from '../api'\nimport BadgesList from '../components/BadgeList';\nimport Loader from '../components/Loader';\n\n// const Badge = () => {\nclass Badge extends React.Component {\n    state = {\n        loading: true,\n        data: undefined,\n        error: null\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData = async () => {\n        this.setState({ loading: true, error: null })\n\n        try {\n            const data = await api.badges.list();\n            this.setState({ loading: false, data })\n\n        } catch (error) {\n            this.setState({ loading: false, error })\n        }\n    }\n\n\n\n    render() {\n\n        if (this.state.loading) {\n            return (\n                <Loader />\n            )\n        }\n\n\n        if (this.state.error) {\n            return `Error: ${this.state.error.message}`\n        }\n        return (\n            <div>\n                <div className=\"Badges\">\n                    <div className=\"Badges__hero\">\n                        <div className=\"Badges__container\">\n                            <img src={logo} alt=\"\" className=\"Badges__conf-logo\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"Badge__container\">\n                    <div className=\"Bages__buttons\">\n                        <Link to=\"/new-badge\" className=\"btn btn-primary\">\n                            New Badge</Link>\n                    </div>\n\n                    <div className=\"Badges__list\">\n                        <div className=\"Badges__container\">\n                            <div className=\"list-unstyled\">\n                                <BadgesList badges={this.state.data} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default Badge","import React from 'react';\nimport logo from '../images/badge-header.svg'\nimport '../styles/badge.css'\n\nconst Badge = props => {\n\n    const { name, lastName, avatar, job, twitter } = props\n    return (\n        <div className=\"Badge\">\n            <div className=\"Badge__header\" >\n                <img src={logo} alt=\"\" />\n            </div>\n\n            <div className=\"Badge__section-name\">\n                <img className=\"Badge__avatar\" src={avatar} alt={name} />\n                <h1>{name} <br /> {lastName}</h1>\n            </div>\n            <div className=\"Badge__section-info\">\n                <h3>{job}</h3>\n                <div>@{twitter}</div>\n            </div>\n            <div className=\"Badge__footer\">#platziconf</div>\n        </div>\n    )\n\n\n}\n\nexport default Badge\n\n","import React from 'react';\n\nconst BadgeForm = (props) => {\n\n    // const handleInputChange = e => {\n    //     console.log({ value: e.target.value })\n    // }\n\n    // const hadleSubmitButton = (event) => {\n    //     event.preventDefault()\n    //     console.log('clicked');\n    // }\n\n    return (\n        <div>\n\n\n            <form onSubmit={props.onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">FirstName</label>\n                    <input onChange={props.onChange} className=\"form-control\" type=\"text\" name=\"name\" placeholder={props.name} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">lastName</label>\n                    <input onChange={props.onChange} className=\"form-control\" type=\"text\" name=\"lastName\" placeholder={props.lastName} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">email</label>\n                    <input onChange={props.onChange} className=\"form-control\" type=\"email\" name=\"email\" placeholder={props.email} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Job Title</label>\n                    <input onChange={props.onChange} className=\"form-control\" type=\"text\" name=\"job\" placeholder={props.job} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Twitter</label>\n                    <input onChange={props.onChange} className=\"form-control\" type=\"text\" name=\"twitter\" placeholder={props.twitter} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\" >Save </button>\n                {props.error && <p>{props.error.message}</p>}\n            </form>\n\n\n        </div>\n\n    )\n}\n\nexport default BadgeForm","import React from 'react';\nimport header from '../images/platziconf-logo.svg';\nimport '../styles/BadgeNew.css';\nimport Badge from './../components/badge';\nimport BadgeForm from '../components/BadgeForm';\nimport api from '../api';\nimport Loader from '../components/Loader';\n\n\n// const BadgeNew = () => {\n\nclass BadgeNew extends React.Component {\n\n    state = {\n        loading: false,\n        error: null,\n        form: {\n            name: '',\n            lastName: '',\n            job: '',\n            email: '',\n            twitter: ''\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        this.setState({ loading: true, error: null })\n        try {\n            await api.badges.create(this.state.form)\n            this.setState({ loading: false })\n            this.props.history.push('/badges')\n\n        } catch (error) {\n            this.setState({ loading: false, error })\n        }\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <Loader />\n        }\n\n        const randomAvatar = Math.floor((Math.random() * 60) + 1);\n\n        const { name, lastName, job, email, twitter } = this.state.form\n        return (\n            <div>\n                <div className=\"BadgeNew__hero\">\n                    <img src={header} alt=\"\" />\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Badge\n                                name={name || 'First Name'}\n                                lastName={lastName || 'Last Name'}\n                                email={email}\n                                avatar={`https://i.pravatar.cc/100?img=${randomAvatar}`}\n                                job={job || 'Position'}\n                                twitter={twitter || 'twitter'} />\n                        </div>\n                        <div className=\"col\">\n                            <h1>New Attendant</h1>\n                            <BadgeForm\n                                onChange={this.handleInputChange}\n                                onSubmit={this.handleSubmit}\n                                error={this.state.error}\n                            />\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BadgeNew","import React from 'react';\nimport logo from '../images/logo.svg';\nimport '../styles/Navbar.css';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <Link className=\"Navbar__brand\" to=\"/\">\n                <img className=\"Navbar__brand-logo\" src={logo} alt=\"Logo\" />\n                <span>Platzi</span>\n                <strong>Conf</strong>\n            </Link>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport Navbar from '../components/Navbar';\n\nconst Layout = (props) => {\n    // const children = props.children\n    return (\n        <>\n            <Navbar />\n            {props.children}\n        </>\n    )\n}\n\nexport default Layout","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <h1>404 Not found</h1>\n    )\n}\n\nexport default NotFound","import React from 'react';\nimport '../styles/Home.css'\nimport logo from '../images/astronauts.svg';\nimport logo2 from '../images/platziconf-logo.svg';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div className=\"Home__Container\">\n            <div className=\"col-1\">\n            </div>\n            <div className=\"col-3 intro\">\n                <img className=\"img-fluid\" src={logo2} alt=\"\" />\n                <h1>Print your badges</h1>\n                <h3>The easiest way to manage your conference</h3>\n                <div className=\"Bages__buttons\">\n                    <Link to=\"/new-badge\" className=\"btn btn-primary btn-lg\">\n                        Start Now</Link>\n                </div>\n            </div>\n\n\n            <div className=\"col-8 logo\">\n                <img className=\"img-fluid\" src={logo} alt=\"\" />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport header from '../images/platziconf-logo.svg';\nimport '../styles/BadgeNew.css';\nimport Badge from './../components/badge';\nimport BadgeForm from '../components/BadgeForm';\nimport api from '../api';\nimport Loader from '../components/Loader';\n\n\n// const BadgeNew = () => {\n\nclass EditBadge extends React.Component {\n\n    state = {\n        loading: true,\n        error: null,\n        form: {\n            name: '',\n            lastName: '',\n            job: '',\n            email: '',\n            twitter: ''\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData = async e => {\n        this.setState({ loading: true, error: null })\n\n        try {\n            const data = await api.badges.read(\n                this.props.match.params.badgeId\n            )\n            console.log({ data })\n\n            this.setState({ loading: false, form: data.payload })\n        } catch (error) {\n            this.setState({ loading: false, error })\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        this.setState({ loading: true, error: null })\n        try {\n            await api.badges.update(this.props.match.params.badgeId, this.state.form)\n            this.setState({ loading: false })\n            this.props.history.push('/badges')\n\n        } catch (error) {\n            this.setState({ loading: false, error })\n        }\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <Loader />\n        }\n\n        const randomAvatar = Math.floor((Math.random() * 60) + 1);\n\n        const { name, lastName, job, email, twitter } = this.state.form\n        return (\n            <div>\n                <div className=\"BadgeNew__hero\">\n                    <img src={header} alt=\"\" />\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Badge\n                                name={name || 'First Name'}\n                                lastName={lastName || 'Last Name'}\n                                email={email}\n                                avatar={`https://i.pravatar.cc/100?img=${randomAvatar}`}\n                                job={job || 'Position'}\n                                twitter={twitter || 'twitter'} />\n                        </div>\n                        <div className=\"col\">\n                            <h1>Edit Attendant</h1>\n                            <BadgeForm\n                                onChange={this.handleInputChange}\n                                onSubmit={this.handleSubmit}\n                                error={this.state.error}\n                                name={name}\n                                lastName={lastName}\n                                email={email}\n                                job={job}\n                                twitter={twitter}\n                            />\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditBadge","import React from 'react';\nimport Badges from './Badges';\nimport BadgeNew from './BadgeNew';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Layout from './Layout';\nimport NotFound from '../containers/NotFound';\nimport Home from '../components/Home';\nimport EditBadge from '../containers/EditBadge';\n\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/badges\" component={Badges} />\n            <Route exact path=\"/new-badge\" component={BadgeNew} />\n            <Route exact path=\"/edit-badge/:badgeId\" component={EditBadge} />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './global.css'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}